<?php
declare(strict_types=1);

/**
 * This file is part of Awooing.moe
 */

namespace App\Presenters;

use Awoo\Models\MainModel;
use Latte\Macros\MacroSet;
use Nette;
use Nette\Database\Context;


class BasePresenter extends Nette\Application\UI\Presenter {

    /** @var Context **/
    private $database;
    /** @var MainModel */
    private $model;

    /**
     * BasePresenter constructor.
     * @param Context $db
     * @param MainModel $model
     */
    public function __construct(Context $db, MainModel $model)
    {
        parent::__construct();
        $this->database = $db;
        $this->model = $model;
    }

    /**
     * Base startup(), adds latte macros, filters
     * checks if user is logged in, exists or banned.
     * @throws Nette\Application\AbortException
     */
    protected function startup()
    {
        parent::startup();
        $set = new MacroSet($this->template->getLatte()->getCompiler());
        $set->addMacro("awooo", " echo \"<img alt='Awooo' class='awoo' src='https://cdn.discordapp.com/emojis/322522663304036352.png?v=1'>\" ");
        $set->addMacro("Awooleft", " echo \"<img alt='Awoo Left' class='awoo' src='https://cdn.discordapp.com/emojis/678290859422384135.png?v=1'>\" ");
        $set->addMacro("Awooright", " echo \"<img alt='Awoo Right' class='awoo' src='https://cdn.discordapp.com/emojis/678290876165914665.png?v=1'>\" ");
        $set->addMacro("AwoooXMAS", " echo \"<img alt='Christmas Awoo' class='awoo' src='https://cdn.discordapp.com/emojis/659215388936241172.png?v=1'>\" ");
        $set->addMacro("DestroyerAwoo", " echo \"<img alt='Destroyer Awoo' class='awoo' src='https://cdn.discordapp.com/emojis/694634291052806290.png?v=1'>\" ");

        $this->template->addFilter('awooIt', function ($content) {
            $string = str_replace(":awooo:", "<img alt='Awooo' class='awoo' src='https://cdn.discordapp.com/emojis/322522663304036352.png?v=1'>", $content);
            $string = str_replace(":Awooleft:", "<img alt='Awoo Left' class='awoo' src='https://cdn.discordapp.com/emojis/678290859422384135.png?v=1'>", $string);
            $string = str_replace(":Awooright:", "<img alt='Awoo Right' class='awoo' src='https://cdn.discordapp.com/emojis/678290876165914665.png?v=1'>", $string);
            $string = str_replace(":AwoooXMAS:", "<img alt='Christmas Awoo' class='awoo' src='https://cdn.discordapp.com/emojis/659215388936241172.png?v=1'>", $string);
            $string = str_replace(":DestroyerAwoo:", "<img alt='Destroyer Awoo' class='awoo' src='https://cdn.discordapp.com/emojis/694634291052806290.png?v=1'>", $string);
            return $string;
        });

        if ($this->getUser()->isLoggedIn()) {
            $user = $this->model->user->getUser($this->getUser()->getId());
            if (!$user) {
                $this->getUser()->logout(true);
                $this->getSession()->destroy();
                $this->flashMessage('<script>Swal.fire({title: "Session destroyed", html: "Your account doesn\'t exist.<br>It may have been deleted by the administrators.<br><br>If you believe this is a mistake, contact us.", icon: "error"})</script>', "script");
                $this->redirect("Homepage:default");
            }
            if (!$this->model->user->checkSession($this->getSession(), $this->getUser())) {
                $this->flashMessage('<script>Swal.fire({title: "Session destroyed", html: "This IP doesn\'t match with the login IP.<br>This is an security precaution against session stealing.<br><br>If you believe this is a mistake, contact us.", icon: "error"})</script>', "script");
                $this->redirect("Homepage:default");
            }
            if ($this->model->user->isUserBanned($this->getUser()->getId())) {
                $this->template->setFile("../app/Presenters/templates/banned.latte");
            }
        }
        if ($this->model->user->isIPBanned($_SERVER['REMOTE_ADDR'])) {
            $this->template->setFile("../app/Presenters/templates/banned.latte");
        }
    }

    /*
     * AJAX:
     * Redrawing snippets in template
     */
    protected function beforeRender()
    {
        parent::beforeRender(); // TODO: Change the autogenerated stub
        $redraw = ["title", "login", "navigation", "banner", "content", "js"];
        foreach ($redraw as $draw) { $this->redrawControl($draw); }
    }

    /**
     * Creates component Login, aligned to center
     * @return Nette\Application\UI\Form
     */
    protected function createComponentLogin():Nette\Application\UI\Form {
        $f = $this->model->createLoginForm("center");
        $f->onSuccess[] = [$this, "processLogin"];
        return $f;
    }

    /**
     * Processes login, calls function login() in MainModel
     * @param Nette\Application\UI\Form $f
     * @param \stdClass $vo
     */
    public function processLogin(Nette\Application\UI\Form $f, \stdClass $vo) {
        $this->flashMessage($this->model->login($this->getSession(), $this->getUser(), $vo), "script");
        if ($this->getUser()->isLoggedIn()) {
            if ($this->model->user->isUserBanned($this->getUser()->id)) {
                $this->template->setFile("../app/Presenters/templates/banned.latte");
            }
        }
    }
}
